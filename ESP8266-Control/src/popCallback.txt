/*
left
ADC0  PWMCOM2

right
GPIO16  relay1
GPIO15  scl
GPIO4   sda
GPIO0   relay2
GPIO2   relay3
GPIO14  DO1
GPIO12  PWMCOM1
GPIO13  Rx2
GPIO15  Tx2
GPIO3   Rx1
GPIO1   Tx1
*/

#include <Arduino.h>
#include <AHT10.h>
#include <Wire.h>
#include <SPI.h>
#include <SD.h>
#include "Nextion.h"

uint8_t readStatus = 0;
AHT10 myAHT10(AHT10_ADDRESS_0X38);

#include <SoftwareSerial.h>
// #define HMISerial_Tx 13
// #define HMISerial_Rx 15

#define HMISerial_Tx 14
#define HMISerial_Rx 12
SoftwareSerial HMISerial;

#define relay1 16
#define relay3 2
int currentPage = 0;
int setValue = 0;

int realVoltage = 0;
int realCurrent = 0;
int realResistance = 0;

// Declare your Nextion objects - Example (page id = 0, component id = 1, component name = "b0")
// Page 0 = welcome page
NexPage page0 = NexPage(0, 0, "page0");

// Page 1 = rules page
NexPage page1     = NexPage(1, 0, "page1");
NexButton bHomeP1 = NexButton(1, 1, "bHomeP1");
NexButton bEneP1  = NexButton(1, 2, "bEneP1");
NexButton bCalP1  = NexButton(1, 3, "bCalP1");
NexButton bSetP1  = NexButton(1, 4, "bSetP1");
NexText tTempP1   = NexText(1, 9, "tTempP1");
NexText tHumP1    = NexText(1, 10, "tHumP1");

// Page 2 = energize page - play
NexPage page2       = NexPage(2, 0, "page2");
NexButton bHomeP2   = NexButton(2, 1, "bButtonP2");
NexButton bEneP2    = NexButton(2, 2, "bEneP2");
NexButton bCalP2    = NexButton(2, 3, "bCalP2");
NexButton bSetP2    = NexButton(2, 4, "bSetP2");
NexButton bPlayP2   = NexButton(2, 5, "bPlayP2");
NexText tOhmP2      = NexText(2, 10, "tOhmP2");
NexText tAmpP2      = NexText(2, 11, "tAmpP2");
NexText tTempP2     = NexText(2, 12, "tTempP2");
NexText tHumP2      = NexText(2, 13, "tHumP2");
NexText tVoltP2     = NexText(2, 14, "tVoltP2");
NexText tSVP2       = NexText(2, 15, "tSVP2");
NexButton bPre25P2  = NexButton(2, 16, "bPre25P2");
NexButton bPre50P2  = NexButton(2, 17, "bPre50P2");
NexButton bPre75P2  = NexButton(2, 18, "bPre75P2");
NexButton bPre99P2  = NexButton(2, 19, "bPre99P2");
NexButton bUpP2     = NexButton(2, 20, "bUpP2");
NexButton bDownP2   = NexButton(2, 21, "bDownP2");
NexButton bResetP2  = NexButton(2, 22, "bResetP2");

// Page 3 = energize page - stop
NexPage page3 = NexPage(3, 0, "page3");
NexButton bHomeP3 = NexButton(3, 1, "bHomeP3");
NexButton bEneP3 = NexButton(3, 2, "bEneP3");
NexButton bCalP3 = NexButton(3, 3, "bCalP3");
NexButton bSetP3 = NexButton(3, 4, "bSetP3");
NexButton bStopP3 = NexButton(3, 5, "bStopP3");
NexText tTempP3 = NexText(3, 10, "bTempP3");
NexText tHumP3 = NexText(3, 11, "bHumP3");
NexText tOhmP3 = NexText(3, 12, "tOhmP3");
NexText tAmpP3 = NexText(3, 13, "tAmpP3");
NexText tVoltP3 = NexText(3, 14, "tVoltP3");
NexText tSVP3 = NexText(3, 15, "tSVP3");
NexButton bPre25P3 = NexButton(3, 16, "bPre25P3");
NexButton bPre50P3 = NexButton(3, 17, "bPre50P3");
NexButton bPre75P3 = NexButton(3, 18, "bPre75P3");
NexButton bPre99P3 = NexButton(3, 19, "bPre99P3");
NexButton bUpP3 = NexButton(3, 20, "bUpP3");
NexButton bDownP3 = NexButton(3, 21, "bDownP3");
NexButton bResetP3 = NexButton(3, 22, "bResetP3");

// Page 4 = calibration page
NexPage page4 = NexPage(4, 0, "page4");
NexButton bHomeP4 = NexButton(4, 1, "bHomeP4");
NexButton bEneP4 = NexButton(4, 2, "bEneP4");
NexButton bCalP4 = NexButton(4, 3, "bCalP4");
NexButton bSetP4 = NexButton(4, 4, "bSetP4");
NexText tTempP4 = NexText(4, 9, "tTempP4");
NexText tHumP4 = NexText(4, 10, "tHumP4");

// Page 5 = setting page
NexPage page5 = NexPage(5, 0, "page5");
NexButton bHomeP5 = NexButton(5, 1, "bHomeP5");
NexButton bEneP5 = NexButton(5, 2, "bEneP5");
NexButton bCalP5 = NexButton(5, 3, "bCalP5");
NexButton bSetP5 = NexButton(5, 4, "bSetP5");
NexText tIPlolin = NexText(5, 9, "tIPlolin");
NexText tIPwemos = NexText(5, 10, "tIPWemos");
NexText tTempP5 = NexText(5, 11, "tTempP5");
NexText tHumP5 = NexText(5, 12, "tHumP5");
NexText tTempDisP5 = NexText(5, 13, "tTempDisP5");
NexText tHumDisP5 = NexText(5, 14, "tHumDisP5");
NexText tWorkingP5 = NexText(5, 15, "tWorkingP5");
NexButton bBrightP5 = NexButton(5, 16, "bBrightP5");
NexButton bHistoryP5 = NexButton(5, 17, "bHistoryP5");
NexButton bSet3P5 = NexButton(5, 18, "bSet3P5");

// Page 6 = setting page > brightness
NexPage page6 = NexPage(6, 0, "page6");
NexButton bHomeP6 = NexButton(6, 1, "bHomeP6");
NexButton bEneP6 = NexButton(6, 2, "bEneP6");
NexButton bCalP6 = NexButton(6, 3, "bCalP6");
NexButton bSetP6 = NexButton(6, 4, "bSetP6");
NexText tTempP6 = NexText(6, 9, "tTempP6");
NexText tHumP6 = NexText(6, 10, "tHumP6");

// Page 7 = setting page > update
NexPage page7 = NexPage(7, 0, "page7");
NexButton bHomeP7 = NexButton(7, 1, "bHomeP7");
NexButton bEneP7 = NexButton(7, 2, "bEneP7");
NexButton bCalP7 = NexButton(7, 3, "bCalP7");
NexButton bSetP7 = NexButton(7, 4, "bSetP7");
NexText tTempP7 = NexText(7, 9, "tTempP7");
NexText tHumP7 = NexText(7, 10, "tHumP7");

// Page 8 = setting page > setting3
NexPage page8 = NexPage(8, 0, "page8");
NexButton bHomeP8 = NexButton(8, 1, "bHomeP8");
NexButton bEneP8 = NexButton(8, 2, "bEneP8");
NexButton bCalP8 = NexButton(8, 3, "bCalP8");
NexButton bSetP8 = NexButton(8, 4, "bSetP8");
NexText tTempP8 = NexText(8, 9, "tTempP8");
NexText tHumP8 = NexText(8, 10, "tHumP8");

// Register a button object to the touch event list.
NexTouch *nex_listen_list[] = {
  &page0,

  &bHomeP1,
  &bEneP1,
  &bCalP1,
  &bSetP1,

  &bHomeP2,
  &bEneP2,
  &bCalP2,
  &bSetP2,
  &bPlayP2,
  &bPre25P2,
  &bPre50P2,
  &bPre75P2,
  &bPre99P2,
  &bUpP2,
  &bDownP2,
  &bResetP2,

  &bHomeP3,
  &bEneP3,
  &bCalP3,
  &bSetP3,
  &bStopP3,
  &bPre25P3,
  &bPre50P3,
  &bPre75P3,
  &bPre99P3,
  &bUpP3,
  &bDownP3,
  &bResetP3,

  &bHomeP4,
  &bEneP4,
  &bCalP4,
  &bSetP4,

  &bHomeP5,
  &bEneP5,
  &bCalP5,
  &bSetP5,
  &bBrightP5,
  &bHistoryP5,
  &bSet3P5,

  &bHomeP6,
  &bEneP6,
  &bCalP6,
  &bSetP6,

  &bHomeP7,
  &bEneP7,
  &bCalP7,
  &bSetP7,

  &bHomeP8,
  &bEneP8,
  &bCalP8,
  &bSetP8,

  NULL
};

// Page 0 = welcome page
void page0PopCallback(void *ptr) {
  currentPage = 1;
}

// Page 1 = rules page
void bHomeP1PopCallback(void *ptr) {
  currentPage = 0;
}
void bEneP1PopCallback(void *ptr) {
  currentPage = 2;
}
void bCalP1PopCallback(void *ptr) {
  currentPage = 4;
}
void bSetP1PopCallback(void *ptr) {
  currentPage = 5;
}

// Page 2 = energize page - play
void bHomeP2PopCallback(void *ptr) {
  currentPage = 0;
}
void bEneP2PopCallback(void *ptr) {
  currentPage = 2;
}
void bCalP2PopCallback(void *ptr) {
  currentPage = 4;
}
void bSetP2PopCallback(void *ptr) {
  currentPage = 5;
}
void bPlayP2PopCallback(void *ptr) {
  currentPage = 3;
}
void bPre25P2Popcallback(void *ptr) {
  setValue = 25;
  Serial.print(25);
}
void bPre50P2Popcallback(void *ptr) {
  setValue = 50;
  Serial.print(50);
}
void bPre75P2Popcallback(void *ptr) {
  setValue = 75;
  Serial.print(75);
}
void bPre99P2Popcallback(void *ptr) {
  setValue = 99;
  Serial.print(99);
}
void bUpP2Popcallback(void *ptr) {
  setValue ++;
  Serial.print(1);
}
void bDownP2Popcallback(void *ptr) {
  setValue --;
  Serial.print(-1);
}
void bResetP2Popcallback(void *ptr) {
  setValue = 0;
  Serial.print(0);
}

// Page 3 = energize page - stop
void bHomeP3PopCallback(void *ptr) {
  currentPage = 0;
}
void bEneP3PopCallback(void *ptr) {
  currentPage = 2;
}
void bCalP3PopCallback(void *ptr) {
  currentPage = 4;
}
void bSetP3PopCallback(void *ptr) {
  currentPage = 5;
}
void bStopP3PopCallback(void *ptr) {
  currentPage = 3;
}
void bPre25P3Popcallback(void *ptr) {
  setValue = 25;
  Serial.print(25);
}
void bPre50P3Popcallback(void *ptr) {
  setValue = 50;
  Serial.print(50);
}
void bPre75P3Popcallback(void *ptr) {
  setValue = 75;
  Serial.print(75);
}
void bPre99P3Popcallback(void *ptr) {
  setValue = 99;
  Serial.print(99);
}
void bUpP3Popcallback(void *ptr) {
  setValue ++;
  Serial.print(1);
}
void bDownP3Popcallback(void *ptr) {
  setValue --;
  Serial.print(-1);
}
void bResetP3Popcallback(void *ptr) {
  setValue = 0;
  Serial.print(0);
}

// Page 4 = calibration page
void bHomeP4PopCallback(void *ptr) {
  currentPage = 0;
}
void bEneP4PopCallback(void *ptr) {
  currentPage = 2;
}
void bCalP4PopCallback(void *ptr) {
  currentPage = 4;
}
void bSetP4PopCallback(void *ptr) {
  currentPage = 5;
}

// Page 5 = setting page
void bHomeP5PopCallback(void *ptr) {
  currentPage = 0;
}
void bEneP5PopCallback(void *ptr) {
  currentPage = 2;
}
void bCalP5PopCallback(void *ptr) {
  currentPage = 4;
}
void bSetP5PopCallback(void *ptr) {
  currentPage = 5;
}
void bBrightP5PopCallback(void *ptr) {
  currentPage = 6;
}
void bHistoryP5PopCallback(void *ptr) {
  currentPage = 7;
}
void bSet3P5PopCallback(void *ptr) {
  currentPage = 8;
}

// Page 6 = setting page > brightness
void bHomeP6PopCallback(void *ptr) {
  currentPage = 0;
}
void bEneP6PopCallback(void *ptr) {
  currentPage = 2;
}
void bCalP6PopCallback(void *ptr) {
  currentPage = 4;
}
void bSetP6PopCallback(void *ptr) {
  currentPage = 5;
}

// Page 7 = setting page > update
void bHomeP7PopCallback(void *ptr) {
  currentPage = 0;
}
void bEneP7PopCallback(void *ptr) {
  currentPage = 2;
}
void bCalP7PopCallback(void *ptr) {
  currentPage = 4;
}
void bSetP7PopCallback(void *ptr) {
  currentPage = 5;
}

// Page 8 = setting page > setting3
void bHomeP8PopCallback(void *ptr) {
  currentPage = 0;
}
void bEneP8PopCallback(void *ptr) {
  currentPage = 2;
}
void bCalP8PopCallback(void *ptr) {
  currentPage = 4;
}
void bSetP8PopCallback(void *ptr) {
  currentPage = 5;
}

void setup() {
  Serial.begin(9600);
  HMISerial.begin(9600, SWSERIAL_8N1, HMISerial_Tx, HMISerial_Rx);

  myAHT10.begin();

  pinMode(2, OUTPUT);
  pinMode(relay1, OUTPUT);

  currentPage = 0;

  nexInit();
  // Register the pop event callback function of the components
  // Page 0 = welcome page
  page0.attachPop(page0PopCallback, &page0);
  // Page 1 = rules page
  bHomeP1.attachPop(bHomeP1PopCallback, &bHomeP1);
  bEneP1.attachPop(bEneP1PopCallback, &bEneP1);
  bCalP1.attachPop(bCalP1PopCallback, &bCalP1);
  bSetP1.attachPop(bSetP1PopCallback, &bSetP1);
  // Page 2 = energize page - play
  bHomeP2.attachPop(bHomeP2PopCallback, &bHomeP2);
  bEneP2.attachPop(bEneP2PopCallback, &bEneP2);
  bCalP2.attachPop(bCalP2PopCallback, &bCalP2);
  bSetP2.attachPop(bSetP2PopCallback, &bSetP2);
  bPlayP2.attachPop(bPlayP2PopCallback, &bPlayP2);
  bPre25P2.attachPop(bPre25P2Popcallback, &bPre25P2);
  bPre50P2.attachPop(bPre50P2Popcallback, &bPre50P2);
  bPre75P2.attachPop(bPre75P2Popcallback, &bPre75P2);
  bPre99P2.attachPop(bPre99P2Popcallback, &bPre99P2);
  bUpP2.attachPop(bUpP2Popcallback, &bUpP2);
  bResetP2.attachPop(bResetP2Popcallback, &bResetP2);
  // Page 3 = energize page - stop
  bHomeP3.attachPop(bHomeP3PopCallback, &bHomeP3);
  bEneP3.attachPop(bEneP3PopCallback, &bEneP3);
  bCalP3.attachPop(bCalP3PopCallback, &bCalP3);
  bSetP3.attachPop(bSetP3PopCallback, &bSetP3);
  bStopP3.attachPop(bStopP3PopCallback, &bStopP3);
  bPre25P3.attachPop(bPre25P3Popcallback, &bPre25P3);
  bPre50P3.attachPop(bPre50P3Popcallback, &bPre50P3);
  bPre75P3.attachPop(bPre75P3Popcallback, &bPre75P3);
  bPre99P3.attachPop(bPre99P3Popcallback, &bPre99P3);
  bUpP3.attachPop(bUpP3Popcallback, &bUpP3);
  bResetP3.attachPop(bResetP3Popcallback, &bResetP3);
  // Page 4 = calibration page
  bHomeP4.attachPop(bHomeP4PopCallback, &bHomeP4);
  bEneP4.attachPop(bEneP4PopCallback, &bEneP4);
  bCalP4.attachPop(bCalP4PopCallback, &bCalP4);
  bSetP4.attachPop(bSetP4PopCallback, &bSetP4);
  // Page 5 = setting page
  bHomeP5.attachPop(bHomeP5PopCallback, &bHomeP5);
  bEneP5.attachPop(bEneP5PopCallback, &bEneP5);
  bCalP5.attachPop(bCalP5PopCallback, &bCalP5);
  bSetP5.attachPop(bSetP5PopCallback, &bSetP5);
  bBrightP5.attachPop(bBrightP5PopCallback, &bBrightP5);
  bHistoryP5.attachPop(bHistoryP5PopCallback, &bHistoryP5);
  bSet3P5.attachPop(bSet3P5PopCallback, &bSet3P5);
  // Page 6 = setting page > brightness
  bHomeP6.attachPop(bHomeP6PopCallback, &bHomeP6);
  bEneP6.attachPop(bEneP6PopCallback, &bEneP6);
  bCalP6.attachPop(bCalP6PopCallback, &bCalP6);
  bSetP6.attachPop(bSetP6PopCallback, &bSetP6);
  // Page 7 = setting page > update
  bHomeP7.attachPop(bHomeP7PopCallback, &bHomeP7);
  bEneP7.attachPop(bEneP7PopCallback, &bEneP7);
  bCalP7.attachPop(bCalP7PopCallback, &bCalP7);
  bSetP7.attachPop(bSetP7PopCallback, &bSetP7);
  // Page 8 = setting page > setting3
  bHomeP8.attachPop(bHomeP8PopCallback, &bHomeP8);
  bEneP8.attachPop(bEneP8PopCallback, &bEneP8);
  bCalP8.attachPop(bCalP8PopCallback, &bCalP8);
  bSetP8.attachPop(bSetP8PopCallback, &bSetP8);

  // for (int thisReading = 0; thisReading < numReadings; thisReading++) {
  //   readingsVoltage[thisReading] = 0;
  //   readingsCurrent[thisReading] = 0;
  // }
  digitalWrite(relay1, LOW);
}


void loop() {
  nexLoop(nex_listen_list);
  // digitalWrite(2, HIGH);
  // // digitalWrite(relay1, HIGH);
  // delay(100);
  // digitalWrite(2, LOW);
  // // digitalWrite(relay1, LOW);
  // delay(100);

    HMISerial.print("tTempP1.txt=\"");
    HMISerial.print(myAHT10.readTemperature());
    HMISerial.print("\"");
    HMISerial.write(0xff);HMISerial.write(0xff);HMISerial.write(0xff);
    
    HMISerial.print("tHumP1.txt=\"");
    HMISerial.print(myAHT10.readHumidity());
    HMISerial.print("\"");
    HMISerial.write(0xff);HMISerial.write(0xff);HMISerial.write(0xff);

    HMISerial.print("tOhmP2.txt=\"");
    HMISerial.print("Farah");
    HMISerial.print("\"");
    HMISerial.write(0xff);HMISerial.write(0xff);HMISerial.write(0xff);

    HMISerial.print("tOhmP3.txt=\"");
    HMISerial.print("Farah");
    HMISerial.print("\"");
    HMISerial.write(0xff);HMISerial.write(0xff);HMISerial.write(0xff);

  if (currentPage == 0) {
    // digitalWrite(2, HIGH);
    digitalWrite(relay1, LOW);
    Serial.println(0);
  } else if (currentPage == 1) {
    // digitalWrite(2, LOW);
    digitalWrite(relay1, HIGH);
    Serial.println(1);
  } else if (currentPage == 2) {
    // digitalWrite(2, LOW);
    digitalWrite(relay1, HIGH);
    Serial.println(2);
  } else if (currentPage == 3) {
    // digitalWrite(2, LOW);
    digitalWrite(relay1, HIGH);
    Serial.println(3);
  } else if (currentPage == 4) {
    // digitalWrite(2, LOW);
    digitalWrite(relay1, HIGH);
    Serial.println(4);
  } else if (currentPage == 5) {
    // digitalWrite(2, LOW);
    digitalWrite(relay1, HIGH);
    Serial.println(5);
  } else if (currentPage == 6) {
    // digitalWrite(2, LOW);
    digitalWrite(relay1, HIGH);
    Serial.println(6);
  } else if (currentPage == 7) {
    // digitalWrite(2, LOW);
    digitalWrite(relay1, HIGH);
    Serial.println(7);
  } else if (currentPage == 8) {
    // digitalWrite(2, LOW);
    digitalWrite(relay1, HIGH);
    Serial.println(8);
  }

  // /* welcome page */
  // if (currentPage == 0) {
  //   // system OFF
  //   digitalWrite(relay1, LOW);
    
  //   // reset order
  //   Serial.write(3);  
  // }
  // /* rules page */
  // else if (currentPage == 1) {
  //   HMISerial.print("tTempP1.txt=\"");
  //   HMISerial.print(myAHT10.readTemperature());
  //   HMISerial.print("\"");
  //   HMISerial.write(0xff);HMISerial.write(0xff);HMISerial.write(0xff);
    
  //   HMISerial.print("tHumP1.txt=\"");
  //   HMISerial.print(myAHT10.readHumidity());
  //   HMISerial.print("\"");
  //   HMISerial.write(0xff);HMISerial.write(0xff);HMISerial.write(0xff);

  //   // system OFF
  //   digitalWrite(relay1, LOW);
  //   // reset order
  //   Serial.write(3);
  // }
  // /* energize page - play */
  // else if (currentPage == 2) {
  //   HMISerial.print("tTempP2.txt=\"");
  //   HMISerial.print(myAHT10.readTemperature());
  //   HMISerial.print("\"");
  //   HMISerial.write(0xff);HMISerial.write(0xff);HMISerial.write(0xff);
  //   HMISerial.print("tHumP2.txt=\"");
  //   HMISerial.print(myAHT10.readHumidity());
  //   HMISerial.print("\"");
  //   HMISerial.write(0xff);HMISerial.write(0xff);HMISerial.write(0xff);
  //   HMISerial.print("tOhmP2.txt=\"");
  //   HMISerial.print("MASIH KOSONG");
  //   HMISerial.print("\"");
  //   HMISerial.write(0xff);
  //   HMISerial.write(0xff);
  //   HMISerial.write(0xff);
  //   HMISerial.print("tAmpP2.txt=\"");
  //   HMISerial.print("MASIH KOSONG");
  //   HMISerial.print("\"");
  //   HMISerial.write(0xff);
  //   HMISerial.write(0xff);
  //   HMISerial.write(0xff);
  //   HMISerial.print("tVoltP2.txt=\"");
  //   HMISerial.print("MASIH KOSONG");
  //   HMISerial.print("\"");
  //   HMISerial.write(0xff);
  //   HMISerial.write(0xff);
  //   HMISerial.write(0xff);
  //   HMISerial.print("tSVP2.txt=\"");
  //   HMISerial.print(setValue);
  //   HMISerial.print("\"");
  //   HMISerial.write(0xff);
  //   HMISerial.write(0xff);
  //   HMISerial.write(0xff);

  //   // system OFF
  //   digitalWrite(relay1, LOW);
  //   // reset order
  //   Serial.write(3);
  // }
  // /* energize page -stop */
  // else if (currentPage == 3) {
  //   HMISerial.print("tTempP3.txt=\"");
  //   HMISerial.print(myAHT10.readTemperature());
  //   HMISerial.print("\"");
  //   HMISerial.write(0xff);
  //   HMISerial.write(0xff);
  //   HMISerial.write(0xff);
  //   HMISerial.print("tHumP3.txt=\"");
  //   HMISerial.print(myAHT10.readHumidity());
  //   HMISerial.print("\"");
  //   HMISerial.write(0xff);
  //   HMISerial.write(0xff);
  //   HMISerial.write(0xff);
  //   HMISerial.print("tOhmP3.txt=\"");
  //   HMISerial.print("MASIH KOSONG");
  //   HMISerial.print("\"");
  //   HMISerial.write(0xff);
  //   HMISerial.write(0xff);
  //   HMISerial.write(0xff);
  //   HMISerial.print("tAmpP3.txt=\"");
  //   HMISerial.print("MASIH KOSONG");
  //   HMISerial.print("\"");
  //   HMISerial.write(0xff);
  //   HMISerial.write(0xff);
  //   HMISerial.write(0xff);
  //   HMISerial.print("tVoltP3.txt=\"");
  //   HMISerial.print("MASIH KOSONG");
  //   HMISerial.print("\"");
  //   HMISerial.write(0xff);
  //   HMISerial.write(0xff);
  //   HMISerial.write(0xff);
  //   HMISerial.print("tSVP3.txt=\"");
  //   HMISerial.print(setValue);
  //   HMISerial.print("\"");
  //   HMISerial.write(0xff);
  //   HMISerial.write(0xff);
  //   HMISerial.write(0xff);

  //   // system ON
  //   digitalWrite(relay1, HIGH);
  //   /* decrease order */
  //   if (realCurrent > setValue) {
  //     Serial.write(0);
  //   }
  //   /* increase order */
  //   else if (realCurrent < setValue) {
  //     Serial.write(1);
  //   }
  //   /* hold order */
  //   else if (realCurrent == setValue) {
  //     Serial.write(2);
  //   }
  // }
  // /* calibrate page */
  // else if (currentPage == 4) {
  //   HMISerial.print("tTempP4.txt=\"");
  //   HMISerial.print(myAHT10.readTemperature());
  //   HMISerial.print("\"");
  //   HMISerial.write(0xff);
  //   HMISerial.write(0xff);
  //   HMISerial.write(0xff);
  //   HMISerial.print("tHumP4.txt=\"");
  //   HMISerial.print(myAHT10.readHumidity());
  //   HMISerial.print("\"");
  //   HMISerial.write(0xff);
  //   HMISerial.write(0xff);
  //   HMISerial.write(0xff);
    
  //   // system OFF
  //   digitalWrite(relay1, LOW);
  //   // reset order
  //   Serial.write(3);
  // }
  // /* setting page */
  // else if (currentPage == 5) {
  //   HMISerial.print("tTempP5.txt=\"");
  //   HMISerial.print(myAHT10.readTemperature());
  //   HMISerial.print("\"");
  //   HMISerial.write(0xff);
  //   HMISerial.write(0xff);
  //   HMISerial.write(0xff);
  //   HMISerial.print("tHumP5.txt=\"");
  //   HMISerial.print(myAHT10.readHumidity());
  //   HMISerial.print("\"");
  //   HMISerial.write(0xff);
  //   HMISerial.write(0xff);
  //   HMISerial.write(0xff);
  //   HMISerial.print("tIPlolin.txt=\"");
  //   HMISerial.print("MASIH KOSONG");
  //   HMISerial.print("\"");
  //   HMISerial.write(0xff);
  //   HMISerial.write(0xff);
  //   HMISerial.write(0xff);
  //   HMISerial.print("tIPwemos.txt=\"");
  //   HMISerial.print("MASIH KOSONG");
  //   HMISerial.print("\"");
  //   HMISerial.write(0xff);
  //   HMISerial.write(0xff);
  //   HMISerial.write(0xff);
    
  //   // system OFF
  //   digitalWrite(relay1, LOW);
  //   // reset order
  //   Serial.write(3);
  // }
  // /* setting page - brightness */
  // else if (currentPage == 6) {
  //   HMISerial.print("tTempP6.txt=\"");
  //   HMISerial.print(myAHT10.readTemperature());
  //   HMISerial.print("\"");
  //   HMISerial.write(0xff);
  //   HMISerial.write(0xff);
  //   HMISerial.write(0xff);
  //   HMISerial.print("tHumP6.txt=\"");
  //   HMISerial.print(myAHT10.readHumidity());
  //   HMISerial.print("\"");
  //   HMISerial.write(0xff);
  //   HMISerial.write(0xff);
  //   HMISerial.write(0xff);

  //   // system OFF
  //   digitalWrite(relay1, LOW);
  //   // reset order
  //   Serial.write(3);
  // }
  // /* setting page - update */
  // else if (currentPage == 7) {
  //   HMISerial.print("tTempP7.txt=\"");
  //   HMISerial.print(myAHT10.readTemperature());
  //   HMISerial.print("\"");
  //   HMISerial.write(0xff);
  //   HMISerial.write(0xff);
  //   HMISerial.write(0xff);
  //   HMISerial.print("tHumP7.txt=\"");
  //   HMISerial.print(myAHT10.readHumidity());
  //   HMISerial.print("\"");
  //   HMISerial.write(0xff);
  //   HMISerial.write(0xff);
  //   HMISerial.write(0xff);

  //   // system OFF
  //   digitalWrite(relay1, LOW);
  //   // reset order
  //   Serial.write(3);
  // }
  // /* blank page */
  // else if (currentPage == 8) {
  //   HMISerial.print("tTempP8.txt=\"");
  //   HMISerial.print(myAHT10.readTemperature());
  //   HMISerial.print("\"");
  //   HMISerial.write(0xff);
  //   HMISerial.write(0xff);
  //   HMISerial.write(0xff);
  //   HMISerial.print("tHumP8.txt=\"");
  //   HMISerial.print(myAHT10.readHumidity());
  //   HMISerial.print("\"");
  //   HMISerial.write(0xff);
  //   HMISerial.write(0xff);
  //   HMISerial.write(0xff);

  //   // system OFF
  //   digitalWrite(relay1, LOW);
  //   // reset order
  //   Serial.write(3);
  // }
    
 
}